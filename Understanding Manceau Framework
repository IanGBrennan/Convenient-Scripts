Manceau Framework:
	+ basis is a linear stochastic differential equation:
	dXt = (a(t)-AXt)dt+Γ(t)dWt
		- where:
		a is a vector of Rⁿ (n being the number of trait values at a given time, so 1 per  likely)
		A is a constant square matrix of size RⁿxRⁿ
		Γ is a square matrix, same size as A, with varying coefficients (through time)
		Wt is Brownian Motion (either single for 1 trait, or n BMs for n traits)
		- the deterministic part:
			(a(t)-AXt)dt
			explains the effects of trait values on their evolution
			e.g. a lineage's value on itself (OU) or on another lineage (PM)
		- the stochastic part:
			Γ(t)dWt
			explains the drift (BM ~ Wt) and environmental noise influencing (trait) evolution

		other variables:
			τ : a branching time τ0 is the root (1 lineage), τT is the present (all surviving)
			nt : the total number of lineages existing within an epoch (period)
			σ : the rate of phenotypic evolution
			ψ : the strength of stabilizing selection (α in OU terms)
			θ : the optimal trait value
			S : the strength of between-lineage competition moving individual phenotypes away from the clade-wise mean
			σ0 : the rate of phenotypic evolution at the root
			r : control parameter dictating the rate of exponential rise/decay (as in AC/DC)
			d : (d₁ or d₂) the shift values for each clade


Notes:
	+ the 'PhenotypicModel' class of the model designates how 'getTipDistribution' calculates the tip distribution, including some optimized model classes ('PhenotypicBM', 'PhenotypicPM', etc.)
		- 'PhenotypicModel' is the generic, and should work for any model, and provide roughly the same likelihood and parameter estimates as the "optimized" model class methods in getTipDistribution (I've tested this with the PM model)
			+ we have to use class 'PhenotypicModel' for the PM+geo model because the 'PhenotypicPM' optimization assumes identical off-diagonal values for the A matrix, whereas accounting for geography creates nonidentical off-diagonals (check the "SigmaU" step in source code)



